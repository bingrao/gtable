generation:
  app: "GTABLE"
  run_type: "generation"
  real_data: examples/adults/data/adult.npz
  metadata: examples/adults/data/adult.json
  data_type: "numpy"

  save_checkpoints_steps: 1000
  epochs: 150
  cuda_visible_devices: 2
  g_penalty: 1.0
  n_critic: 1
  output: examples/adults/output/fake_adults_gtable.csv

  transformer_type: "gmm"
  numerical_embeddding: 'Gaussian_Norm'
  ordinal_embeddding: 'One_Hot'
  categorial_embeddding: 'One_Hot'
  noise: "normal"

  gen_layers: 2
  dis_layers: 2
  gtable_model: "gtable_standard"

  optim: adam
  learning_rate: 2e-4
  adam_beta1: 0.5
  adam_beta2: 0.9


  features_col: ['age', 'workclass', 'fnlwgt', 'education', 'education-num', 'marital-status',
                 'occupation', 'relationship', 'race', 'sex', 'capital-gain', 'capital-loss',
                 'hours-per-week', 'native-country']
  target_col: 'income'

  classify_tasks: ['xgboost', 'logistic_regression', 'random_forest', 'decision_tree', 'mlp']
  classify_scores: [ 'F1_Score', 'Recall_Score', 'Precision_Score']

  numerical_statistics: ['min', 'max', 'mean', 'median', 'std', 'var']


evaluate:
  app: "GTABLE"
  run_type: "evaluate"
  transformer_type: "gmm"
  data_type: "numpy"
  real_data: examples/adults/data/adult.npz
  fake_data: examples/adults/data/adult.npz
  metadata: examples/adults/data/adult.json

  features_col: ['age', 'workclass', 'fnlwgt', 'education', 'education-num', 'marital-status',
                 'occupation', 'relationship', 'race', 'sex', 'capital-gain', 'capital-loss',
                 'hours-per-week', 'native-country']
  target_col: 'income'

  classify_tasks: ['xgboost', 'logistic_regression', 'random_forest', 'decision_tree', 'mlp']
  classify_scores: [ 'F1_Score', 'Recall_Score', 'Precision_Score']

#  regression_tasks: ['random_forest_regr', 'lasso', 'ridge', 'elastic_net']
#  regression_scores: ['mse', 'mae', 'mape', 'rmse']

#  visual: ['mean_std', 'cumsums', 'distributions', 'correlation', 'pca']
#  visual: ['correlation']

  numerical_statistics: ['min', 'max', 'mean', 'median', 'std', 'var']
